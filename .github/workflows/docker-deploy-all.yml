name: Build & Push All Microservices

on:
  push:
    branches: [ master ]

env:
  REGISTRY: docker.io
  IMAGE_PREFIX: ${{ secrets.DOCKERHUB_USERNAME }}/eventsystem

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout source code
      uses: actions/checkout@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build and push Authentication.Api
      uses: docker/build-push-action@v4
      with:
        context: ./EventTicketingSystem/Services/Authentication/Authentication.Api
        push: true
        tags: ${{ env.IMAGE_PREFIX }}-auth:latest

    - name: Build and push Users.Api
      uses: docker/build-push-action@v4
      with:
        context: ./EventTicketingSystem/Services/Users/Users.Api
        push: true
        tags: ${{ env.IMAGE_PREFIX }}-users:latest

    - name: Build and push Payments.Api
      uses: docker/build-push-action@v4
      with:
        context: ./EventTicketingSystem/Services/Payments/Payments.Api
        push: true
        tags: ${{ env.IMAGE_PREFIX }}-payments:latest

    - name: Build and push Orchestration.Api
      uses: docker/build-push-action@v4
      with:
        context: ./EventTicketingSystem/Services/Orchestration/Orchestration.Api
        push: true
        tags: ${{ env.IMAGE_PREFIX }}-orchestrator:latest

    - name: Build and push Tickets.Api
      uses: docker/build-push-action@v4
      with:
        context: ./EventTicketingSystem/Services/Tickets/Tickets.Api
        push: true
        tags: ${{ env.IMAGE_PREFIX }}-tickets:latest
